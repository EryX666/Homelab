apiVersion: batch/v1
kind: Job
metadata:
  name: vault-init
  namespace: vault
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "1"
spec:
  backoffLimit: 10
  activeDeadlineSeconds: 900
  template:
    spec:
      serviceAccountName: vault
      containers:
      - name: vault-init
        image: vault:1.18.1
        env:
        - name: VAULT_ADDR
          value: "http://vault:8200"
        command:
        - /bin/sh
        - -c
        - |
          set -e

          echo "Step 1: Starting Vault initialization script"

          echo "Step 2: Checking Vault readiness..."
          while true; do
            if vault status | grep -q "Initialized        true"; then
              echo "Vault is responding and initialized."
              break
            else
              echo "Waiting for Vault to respond..."
              sleep 2
            fi
          done

          echo "Step 3: Verifying if Vault is sealed..."
          if vault status | grep -q "Sealed             true"; then
            echo "Vault is sealed. Attempting to unseal..."

            if [ ! -f /vault/data/keys.json ]; then
              echo "Keys file not found. Initializing Vault..."
              vault operator init -key-shares=1 -key-threshold=1 -format=json > /vault/data/keys.json
              echo "Keys file created at /vault/data/keys.json."
            fi

            unseal_key=$(cat /vault/data/keys.json | grep unseal_keys_b64 | head -1 | awk -F '"' '{print $4}')
            vault operator unseal "$unseal_key"
            echo "Vault has been unsealed."
          else
            echo "Vault is already unsealed."
          fi

          echo "Step 4: Script execution completed."
      volumes:
      - name: vault-data
        persistentVolumeClaim:
          claimName: vault-data-pvc
      restartPolicy: OnFailure
