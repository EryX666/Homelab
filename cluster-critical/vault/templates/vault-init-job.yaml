apiVersion: batch/v1
kind: Job
metadata:
  name: vault-init
  namespace: vault
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "1"
    argocd.argoproj.io/sync-wave: "2"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  backoffLimit: 10
  activeDeadlineSeconds: 900
  template:
    spec:
      serviceAccountName: vault
      containers:
      - name: vault-init
        image: "hashicorp/vault:1.18.1"
        imagePullPolicy: IfNotPresent
        env:
        - name: VAULT_ADDR
          value: "http://vault:8200"
        command:
        - /bin/sh
        - -c
        - |
          set -e

          echo "Step 1: Ensuring directory for keys exists..."
          mkdir -p /vault/data

          echo "Step 2: Waiting for Vault to become responsive..."
          while true; do
            if vault status > /dev/null 2>&1; then
              echo "Vault is responding."
              break
            else
              echo "Waiting for Vault to respond..."
              sleep 2
            fi
          done

          echo "Step 3: Checking if Vault is initialized..."
          if vault status | grep -q "Initialized        false"; then
            echo "Vault is not initialized. Initializing now..."
            vault operator init -key-shares=1 -key-threshold=1 -format=json > /vault/data/keys.json
            echo "Vault initialized successfully. Keys saved to /vault/data/keys.json."
          else
            echo "Vault is already initialized."
          fi

          echo "Step 4: Script execution completed."
      volumes:
      - name: vault-data
        persistentVolumeClaim:
          claimName: data-vault-0
      restartPolicy: OnFailure
